from cmath import cos
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.animation import FuncAnimation
import pandas as pd 
import math
from matplotlib import rc



plt.rcParams['font.family'] = 'Malgun Gothic' #한글 폰트
plt.rcParams['axes.unicode_minus'] = False    #한글 폰트

plt.figure(1)       #그래프 첫 번째 도화지 그리기
plt.axes(xlim=(0,0.3000), ylim=(0,0.3000))   #축을 지정함으로써 그래프 정의

x1 = np.linspace(0, 0.130, 1000)     #x는 0에서 특정값까지 얼마만큼 증가
y1 = np.linspace(0, 0.075, 1000)          #그래프 그리기(링크1번)

x2 = np.linspace(0.130, 0.1819,1000)      #초기 링크 2번 구성
y2 = np.linspace(0.075, 0.1270,1000)

first = plt.plot(x1, y1, c = 'k',label = '링크 1 최초 위치(연장선포함)')             #그래프 최종 그리기
second = plt.plot(x2, y2, c = 'k', label = '링크 2 최초 위치')              #링크2 그래프그리기

theta_1 = math.radians(32.00126)    #역기구학 세타2
theta_2 = math.radians(62.9998)   #역기구학 조건 세타2(도), 라디안으로 바꿔준다
L1 = 0.15   #링크1 길이
L2 = 0.12


kin_x2 = np.linspace(L1*math.cos(theta_1), 0.1819+L2*(math.sin(theta_2)*math.sin(theta_1))  , 1000)  #역기구학 1회 실행시 x 좌표 변화
kin_y2 = np.linspace(L1*math.sin(theta_1), 0.075+L2*(math.cos(theta_2)*math.sin(theta_1)), 1000)    #y좌표 변화
kin_first = plt.plot(kin_x2, kin_y2, '--', c = 'b')  #세타2 구해서 전단계 구함

kin_x1 = np.linspace(0, L1*math.cos(theta_1))
kin_y1 = np.linspace(0, L1*math.sin(theta_1))
kin_second = plt.plot(kin_x1, kin_y1, c = 'b',label = '목표 지점 : (0,0)')

plt.scatter(0,0,c = 'k') #점찍기(첫번째 원점)
plt.scatter(0.130,0.075, c='k') #두번째 원점
plt.scatter(0.1819,0.1270, c='k') #세번째 원점

plt.title("RR형 매니퓰레이터 역기구학 결과")     #제목
plt.xlabel("x축")        #x축
plt.ylabel("y축")        #y축
plt.legend()    #범례
plt.grid()                  #도화지에 칸나눔




#---------------------------------------------------------------------------
'''
plt.figure(2)           #두번째 창 띄우기
plt.axes(xlim=(0,0.3000), ylim=(0,0.3000))   #축을 지정함으로써 그래프 정의

x1 = np.linspace(0, 0.130, 1000)     #x는 0에서 특정값까지 얼마만큼 증가
y1 = np.linspace(0, 0.075, 1000)          #그래프 그리기(링크1번)

x2 = np.linspace(0.130, 0.1819,1000)      #초기 링크 2번 구성
y2 = np.linspace(0.075, 0.1270,1000)

first = plt.plot(x1, y1, c = 'k',label = '링크 1 최초 위치(연장선포함)')             #그래프 최종 그리기
second = plt.plot(x2, y2, c = 'k', label = '링크 2 최초 위치')              #링크2 그래프그리기

theta_1 = math.radians(32.00126)    #역기구학 세타2
theta_2 = math.radians(62.9998)   #역기구학 조건 세타2(도), 라디안으로 바꿔준다
L1 = 0.15   #링크1 길이
L2 = 0.12


kin_x2 = np.linspace(L1*math.cos(theta_1), 0.1819+L2*(math.sin(theta_2)*math.sin(theta_1))  , 1000)  #역기구학 1회 실행시 x 좌표 변화
kin_y2 = np.linspace(L1*math.sin(theta_1), 0.075+L2*(math.cos(theta_2)*math.sin(theta_1)), 1000)    #y좌표 변화
kin_first = plt.plot(kin_x2, kin_y2, '--', c = 'b')  #세타2 구해서 전단계 구함

kin_x1 = np.linspace(0, L1*math.cos(theta_1))
kin_y1 = np.linspace(0, L1*math.sin(theta_1))
kin_second = plt.plot(kin_x1, kin_y1, c = 'b',label = '목표 지점 : (0,0)')

plt.scatter(0,0,c = 'k') #점찍기(첫번째 원점)
plt.scatter(0.130,0.075, c='k') #두번째 원점
plt.scatter(0.1819,0.1270, c='k') #세번째 원점

plt.title("RR형 매니퓰레이터 자코비안 결과")     #제목
plt.xlabel("x축")        #x축
plt.ylabel("y축")        #y축
plt.legend()    #범례
plt.grid()                  #도화지에 칸나눔
'''